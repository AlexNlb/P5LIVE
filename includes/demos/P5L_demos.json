{
  "sketches": [
    {
      "sketchName": "aboutsketch",
      "sketchCode": "/*\taboutsketch // cc teddavis.org 2019\t*/\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tnoStroke();\n\tmouseX = width / 2;\n\tmouseY = height / 2;\n}\n\nfunction draw() {\n\tbackground(0);\n\ttri(0, 0, mouseX, mouseY, 0, height, 100);\n\ttri(0, 0, mouseX, mouseY, width, 0, 200);\n\ttri(width, height, mouseX, mouseY, 0, height, 0);\n\ttri(width, height, mouseX, mouseY, width, 0, 255);\n}\n\nfunction tri(x1, y1, x2, y2, x3, y3, fc) {\n\tvar v = 0.002;\n\tfill(abs(sin(fc + (frameCount * v))) * 255);\n\tbeginShape();\n\tvertex(x1, y1);\n\tvertex(x2, y2);\n\tvertex(x3, y3);\n\tendShape();\n}"
    },
    {
      "sketchName": "bwEllipse",
      "sketchCode": "/*\tbwEllipse // cc teddavis.org 2019\t*/\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n}\n\nfunction draw() {\n\tfill(255);\n\tstroke(255);\n\tif(frameCount % 2 == 0)\n\t\tstroke(0);\n\tstrokeWeight(15);\n\tvar oscX = sin(frameCount * 0.01) * width * .4;\n\tvar oscY = sin(frameCount * 0.045) * height * .4;\n\tvar s = sin(frameCount * 0.02) * 150;\n\ttranslate(width / 2, height / 2);\n\tellipse(oscX, oscY, s, s);\n}"
    },
    {
      "sketchName": "easeFunction",
      "sketchCode": "/*\teaseFunction // cc teddavis.org 2019\t*/\n\nvar x = 0,\n\ty = 0,\n\te = 0.05;\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tfill(255);\n}\n\nfunction draw() {\n\tbackground(200);\n\t// built-in ease(inVal, outVal, easeVal) for smoothing values\n\tx = ease(mouseX, x, e);\n\ty = ease(mouseY, y, e);\n\tellipse(x, y, 150, 150);\n\ttext(nf(x, 3, 1) + \" / \" + nf(y, 3, 1), 0, height);\n\n}"
    },
    {
      "sketchName": "sinStrings",
      "sketchCode": "/*\tsinStrings // cc teddavis.org 2019\t*/\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tmouseX = width * 0.4;\n}\n\nfunction draw() {\n\tbackground(200);\n\tvar lc = 20;\n\tfill(0);\n\tfor(var i = 0; i < lc; i++) {\n\t\tvar s = width / lc;\n\t\tvar x = map(i, 0, lc - 1, 0, width);\n\t\tvar osc = sin((frameCount * .01) + i * map(mouseX, 0, width, 0, 5));\n\t\tvar y = height / 2 + osc * abs(mouseY - height / 2);\n\t\tstroke(150);\n\t\tstrokeWeight(2.1 - (osc * 2));\n\t\tline(x, y, x, 0);\n\t\tnoStroke();\n\t\tellipse(x, y, s, s);\n\t}\n}"
    },
    {
      "sketchName": "wanderingWorm",
      "sketchCode": "/*\twanderingWorm // cc teddavis.org 2019\t*/\n\nvar x, y, nx, ny;\nvar s = 50.0;\nvar sMin = 25;\nvar sg = 2;\nvar nxv = 0.006;\nvar nyv = 0.005;\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tnoCursor();\n\tnx = random(width);\n\tny = random(height);\n\tbackground(0);\n}\n\nfunction draw() {\n\tx = floor(noise(nx) * width);\n\ty = floor(noise(ny) * height);\n\tfill(255);\n\tif(mouseIsPressed) {\n\t\ts += sg;\n\t} else {\n\t\ts -= sg;\n\t\tif(s < sMin)\n\t\t\ts = sMin;\n\t}\n\n\tellipse(x, y, s, s);\n\n\tnx += nxv;\n\tny += nyv;\n}\n\nfunction keyPressed() {\n\tif(keyCode == 8)\n\t\tbackground(0);\n}"
    },
    {
      "sketchName": "audioAnalysis",
      "sketchCode": "/*\twanderingWorm // cc teddavis.org 2019\n\t+ tips: \n\thttps://p5js.org/reference/#/libraries/p5.sound \n\thttps://therewasaguy.github.io/p5-music-viz/\t\n*/\n\nvar mic, wave, fft;\nvar numSamples = 1024;\nvar numBands = 16;\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tnoFill();\n\n\tmic = new p5.AudioIn();\n\tmic.start();\n\twave = new p5.FFT(0.5, numSamples);\n\tfft = new p5.FFT(0.75, numBands);\n\twave.setInput(mic);\n\tfft.setInput(mic);\n}\n\nfunction draw() {\n\tbackground(150);\n\tnoFill();\n\tstrokeWeight(2);\n\n\t// draw waveform\n\tstroke(0, 0, 255);\n\tvar spectrum = wave.waveform(); // aud.analyze();\n\tbeginShape();\n\tfor(var i = 0; i < spectrum.length; i++) {\n\t\tvar x = map(i, 0, spectrum.length - 1, 0, width);\n\t\tvar y = map(spectrum[i], -1, 1, -height / 2, height / 2);\n\t\tvertex(x, y + height / 2);\n\t}\n\tendShape();\n\n\t// draw fft\n\tstroke(0);\n\tvar spectrum = fft.analyze();\n\tbeginShape();\n\tfor(var i = 0; i < spectrum.length; i++) {\n\t\tvar x = map(i, 0, spectrum.length - 1, 0, width);\n\t\tvar y = map(spectrum[i], 0, 255, 0, height / 2);\n\t\tvertex(x, y + height / 2);\n\t}\n\tendShape();\n\n\tvar s = mic.getLevel() * 1000;\n\tfill(0);\n\tnoStroke();\n\tellipse(width / 2, height / 2, s, s);\n}"
    },
    {
      "sketchName": "webgl_sphereBox",
      "sketchCode": "/*\twebgl_sphereBox // cc teddavis.org 2019\t*/\n\nvar lc = 8;\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight, WEBGL);\n\tnoCursor();\n\tnoStroke();\n\n}\n\nfunction draw() {\n\tortho();\n\tbackground(0);\n\tfor(var i = 0; i < lc; i++) {\n\t\tfor(var j = 0; j < lc; j++) {\n\t\t\tvar mx = map(i, 0, lc - 1, -width / 2, width / 2);\n\t\t\tvar my = map(j, 0, lc - 1, -height / 2, height / 2);\n\n\t\t\tboxsphere(mx, my);\n\t\t}\n\t}\n}\n\nfunction boxsphere(x, y) {\n\tpush();\n\ttranslate(x, y);\n\tvar mmx = map(mouseX, 0, width, -width / 2, width / 2);\n\tvar mmy = map(mouseY, 0, height, -height / 2, height / 2);\n\tvar roff = -dist(mmx, mmy, x, y) / 2;\n\trotateY(radians(frameCount + mouseX));\n\trotateX(radians(mouseY));\n\tvar s = (width / lc / 2) + roff;\n\n\tfill(255);\n\tif(mouseIsPressed) {\n\t\tfill(0);\n\t}\n\tbox(s);\n\n\tfill(0);\n\tif(mouseIsPressed) {\n\t\tfill(255);\n\t}\n\tsphere(s * 0.65);\n\tpop();\n}"
    },
    {
      "sketchName": "textToPoints",
      "sketchCode": "/*\ttextToPoints // cc teddavis.org 2019\t*/\n\nvar font, myText = \"P5L\";\nvar points = [];\n\n// function preload() {\n// \tfont = loadFont('includes/fonts/RobotoMono-Regular.ttf');\n// }\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tstroke(255);\n\tfont = loadFont('includes/fonts/RobotoMono-Regular.ttf', getPoints);\n\t//getPoints();\n\trectMode(CENTER);\n}\n\nfunction draw() {\n\tbackground(0);\n\ttranslate(width / 4, height * .7);\n\tfor(var i = 0; i < points.length; i++) {\n\t\tvar pt = points[i];\n\t\tpush();\n\t\ttranslate(pt.x, pt.y);\n\t\trotate(radians(sin(frameCount * i * 0.00003) * 180));\n\t\tvar w = dist(mouseX, mouseY, pt.x + width / 4, pt.y + height * .7) / 3;\n\t\tline(0, 0, w, w);\n\t\tpop();\n\t}\n}\n\nfunction getPoints() {\n\tvar s = width / myText.length;\n\tpoints = font.textToPoints(myText, 0, 0, s);\n\ttextFont(font);\n\n}\n\n"
    },
    {
      "sketchName": "basel.codes",
      "sketchCode": "/*\t\nhttp://basel.codes // 2019\n@maxfrischknect\n@yannmartins\n@teddavis\nmodified Boid class to ES5 for refreshing w/ help from https://babeljs.io\n*/\n\nvar personaggini = [];\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\ttextAlign(CENTER, CENTER)\n\tvar loopc = innerWidth / 100;\n\tvar brdr = 20;\n\tpersonaggini = [];\n\tfor(var i = 0; i < loopc; i++) {\n\t\tpersonaggini.push(new Boid(random(brdr, width - brdr), random(brdr, height - brdr)));\n\t}\n\n}\n\nfunction draw() {\n\tbackground(200);\n\tfor(const boid of personaggini) {\n\t\tboid.update();\n\t\tboid.proximity(personaggini);\n\t\tboid.edges();\n\t\tboid.show(personaggini);\n\t}\n}\n\nfunction mousePressed() {\n\tpersonaggini.push(new Boid(mouseX, mouseY))\n}\n\nfunction keyPressed() {\n\tif(keyCode == 8) {\n\t\tpersonaggini = [];\n\t}\n\n}\n\n\nvar emojis = [\n\t'🦄', '👶', '👶🏻', '👶🏼', '👶🏽', '👶🏾', '👶🏿', '🧒', '🧒🏻', '🧒🏼', '🧒🏽', '🧒🏾', '🧒🏿', '👦', '👦🏻', '👦🏼', '👦🏽', '👦🏾', '👦🏿', '👧', '👧🏻', '👧🏼', '👧🏽', '👧🏾', '👧🏿', '🧑', '🧑🏻', '🧑🏼', '🧑🏽', '🧑🏾', '🧑🏿', '👨', '👨🏻', '👨🏼', '👨🏽', '👨🏾', '👨🏿', '👩', '👩🏻', '👩🏼', '👩🏽', '👩🏾', '👩🏿', '🧓', '🧓🏻', '🧓🏼', '🧓🏽', '🧓🏾', '🧓🏿', '👴', '👴🏻', '👴🏼', '👴🏽', '👴🏾', '👴🏿', '👵', '👵🏻', '👵🏼', '👵🏽', '👵🏾', '👵🏿', '👨‍⚕️', '👨‍⚕', '👨🏻‍⚕️', '👨🏻‍⚕', '👨🏼‍⚕️', '👨🏼‍⚕', '👨🏽‍⚕️', '👨🏽‍⚕', '👨🏾‍⚕️', '👨🏾‍⚕', '👨🏿‍⚕️', '👨🏿‍⚕', '👩‍⚕️', '👩‍⚕', '👩🏻‍⚕️', '👩🏻‍⚕', '👩🏼‍⚕️', '👩🏼‍⚕', '👩🏽‍⚕️', '👩🏽‍⚕', '👩🏾‍⚕️', '👩🏾‍⚕', '👩🏿‍⚕️', '👩🏿‍⚕', '👨‍🎓', '👨🏻‍🎓', '👨🏼‍🎓', '👨🏽‍🎓', '👨🏾‍🎓', '👨🏿‍🎓', '👩‍🎓', '👩🏻‍🎓', '👩🏼‍🎓', '👩🏽‍🎓', '👩🏾‍🎓', '👩🏿‍🎓', '👨‍🏫', '👨🏻‍🏫', '👨🏼‍🏫', '👨🏽‍🏫', '👨🏾‍🏫', '👨🏿‍🏫', '👩‍🏫', '👩🏻‍🏫', '👩🏼‍🏫', '👩🏽‍🏫', '👩🏾‍🏫', '👩🏿‍🏫', '👨‍⚖️', '👨‍⚖', '👨🏻‍⚖️', '👨🏻‍⚖', '👨🏼‍⚖️', '👨🏼‍⚖', '👨🏽‍⚖️', '👨🏽‍⚖', '👨🏾‍⚖️', '👨🏾‍⚖', '👨🏿‍⚖️', '👨🏿‍⚖', '👩‍⚖️', '👩‍⚖', '👩🏻‍⚖️', '👩🏻‍⚖', '👩🏼‍⚖️', '👩🏼‍⚖', '👩🏽‍⚖️', '👩🏽‍⚖', '👩🏾‍⚖️', '👩🏾‍⚖', '👩🏿‍⚖️', '👩🏿‍⚖', '👨‍🌾', '👨🏻‍🌾', '👨🏼‍🌾', '👨🏽‍🌾', '👨🏾‍🌾', '👨🏿‍🌾', '👩‍🌾', '👩🏻‍🌾', '👩🏼‍🌾', '👩🏽‍🌾', '👩🏾‍🌾', '👩🏿‍🌾', '👨‍🍳', '👨🏻‍🍳', '👨🏼‍🍳', '👨🏽‍🍳', '👨🏾‍🍳', '👨🏿‍🍳', '👩‍🍳', '👩🏻‍🍳', '👩🏼‍🍳', '👩🏽‍🍳', '👩🏾‍🍳', '👩🏿‍🍳', '👨‍🔧', '👨🏻‍🔧', '👨🏼‍🔧', '👨🏽‍🔧', '👨🏾‍🔧', '👨🏿‍🔧', '👩‍🔧', '👩🏻‍🔧', '👩🏼‍🔧', '👩🏽‍🔧', '👩🏾‍🔧', '👩🏿‍🔧', '👨‍🏭', '👨🏻‍🏭', '👨🏼‍🏭', '👨🏽‍🏭', '👨🏾‍🏭', '👨🏿‍🏭', '👩‍🏭', '👩🏻‍🏭', '👩🏼‍🏭', '👩🏽‍🏭', '👩🏾‍🏭', '👩🏿‍🏭', '👨‍💼', '👨🏻‍💼', '👨🏼‍💼', '👨🏽‍💼', '👨🏾‍💼', '👨🏿‍💼', '👩‍💼', '👩🏻‍💼', '👩🏼‍💼', '👩🏽‍💼', '👩🏾‍💼', '👩🏿‍💼', '👨‍🔬', '👨🏻‍🔬', '👨🏼‍🔬', '👨🏽‍🔬', '👨🏾‍🔬', '👨🏿‍🔬', '👩‍🔬', '👩🏻‍🔬', '👩🏼‍🔬', '👩🏽‍🔬', '👩🏾‍🔬', '👩🏿‍🔬', '👨‍💻', '👨🏻‍💻', '👨🏼‍💻', '👨🏽‍💻', '👨🏾‍💻', '👨🏿‍💻', '👩‍💻', '👩🏻‍💻', '👩🏼‍💻', '👩🏽‍💻', '👩🏾‍💻', '👩🏿‍💻', '👨‍🎤', '👨🏻‍🎤', '👨🏼‍🎤', '👨🏽‍🎤', '👨🏾‍🎤', '👨🏿‍🎤', '👩‍🎤', '👩🏻‍🎤', '👩🏼‍🎤', '👩🏽‍🎤', '👩🏾‍🎤', '👩🏿‍🎤', '👨‍🎨', '👨🏻‍🎨', '👨🏼‍🎨', '👨🏽‍🎨', '👨🏾‍🎨', '👨🏿‍🎨', '👩‍🎨', '👩🏻‍🎨', '👩🏼‍🎨', '👩🏽‍🎨', '👩🏾‍🎨', '👩🏿‍🎨', '👨‍✈️', '👨‍✈', '👨🏻‍✈️', '👨🏻‍✈', '👨🏼‍✈️', '👨🏼‍✈', '👨🏽‍✈️', '👨🏽‍✈', '👨🏾‍✈️', '👨🏾‍✈', '👨🏿‍✈️', '👨🏿‍✈', '👩‍✈️', '👩‍✈', '👩🏻‍✈️', '👩🏻‍✈', '👩🏼‍✈️', '👩🏼‍✈', '👩🏽‍✈️', '👩🏽‍✈', '👩🏾‍✈️', '👩🏾‍✈', '👩🏿‍✈️', '👩🏿‍✈', '👨‍🚀', '👨🏻‍🚀', '👨🏼‍🚀', '👨🏽‍🚀', '👨🏾‍🚀', '👨🏿‍🚀', '👩‍🚀', '👩🏻‍🚀', '👩🏼‍🚀', '👩🏽‍🚀', '👩🏾‍🚀', '👩🏿‍🚀', '👨‍🚒', '👨🏻‍🚒', '👨🏼‍🚒', '👨🏽‍🚒', '👨🏾‍🚒', '👨🏿‍🚒', '👩‍🚒', '👩🏻‍🚒', '👩🏼‍🚒', '👩🏽‍🚒', '👩🏾‍🚒', '👩🏿‍🚒', '👮', '👮🏻', '👮🏼', '👮🏽', '👮🏾', '👮🏿', '👮‍♂️', '👮‍♂', '👮🏻‍♂️', '👮🏻‍♂', '👮🏼‍♂️', '👮🏼‍♂', '👮🏽‍♂️', '👮🏽‍♂', '👮🏾‍♂️', '👮🏾‍♂', '👮🏿‍♂️', '👮🏿‍♂', '👮‍♀️', '👮‍♀', '👮🏻‍♀️', '👮🏻‍♀', '👮🏼‍♀️', '👮🏼‍♀', '👮🏽‍♀️', '👮🏽‍♀', '👮🏾‍♀️', '👮🏾‍♀', '👮🏿‍♀️', '👮🏿‍♀', '🕵️', '🕵', '🕵🏻', '🕵🏼', '🕵🏽', '🕵🏾', '🕵🏿', '🕵️‍♂️', '🕵‍♂️', '🕵️‍', '🕵‍♂', '🕵🏻‍♂️', '🕵🏻‍♂', '🕵🏼‍♂️', '🕵🏼‍♂', '🕵🏽‍♂️', '🕵🏽‍♂', '🕵🏾‍♂️', '🕵🏾‍♂', '🕵🏿‍♂️', '🕵🏿‍♂', '🕵️‍♀️', '🕵‍♀️', '🕵️‍', '🕵‍♀', '🕵🏻‍♀️', '🕵🏻‍♀', '🕵🏼‍♀️', '🕵🏼‍♀', '🕵🏽‍♀️', '🕵🏽‍♀', '🕵🏾‍♀️', '🕵🏾‍♀', '🕵🏿‍♀️', '🕵🏿‍♀', '💂', '💂🏻', '💂🏼', '💂🏽', '💂🏾', '💂🏿', '💂‍♂️', '💂‍♂', '💂🏻‍♂️', '💂🏻‍♂', '💂🏼‍♂️', '💂🏼‍♂', '💂🏽‍♂️', '💂🏽‍♂', '💂🏾‍♂️', '💂🏾‍♂', '💂🏿‍♂️', '💂🏿‍♂', '💂‍♀️', '💂‍♀', '💂🏻‍♀️', '💂🏻‍♀', '💂🏼‍♀️', '💂🏼‍♀', '💂🏽‍♀️', '💂🏽‍♀', '💂🏾‍♀️', '💂🏾‍♀', '💂🏿‍♀️', '💂🏿‍♀', '👷', '👷🏻', '👷🏼', '👷🏽', '👷🏾', '👷🏿', '👷‍♂️', '👷‍♂', '👷🏻‍♂️', '👷🏻‍♂', '👷🏼‍♂️', '👷🏼‍♂', '👷🏽‍♂️', '👷🏽‍♂', '👷🏾‍♂️', '👷🏾‍♂', '👷🏿‍♂️', '👷🏿‍♂', '👷‍♀️', '👷‍♀', '👷🏻‍♀️', '👷🏻‍♀', '👷🏼‍♀️', '👷🏼‍♀', '👷🏽‍♀️', '👷🏽‍♀', '👷🏾‍♀️', '👷🏾‍♀', '👷🏿‍♀️', '👷🏿‍♀', '🤴', '🤴🏻', '🤴🏼', '🤴🏽', '🤴🏾', '🤴🏿', '👸', '👸🏻', '👸🏼', '👸🏽', '👸🏾', '👸🏿', '👳', '👳🏻', '👳🏼', '👳🏽', '👳🏾', '👳🏿', '👳‍♂️', '👳‍♂', '👳🏻‍♂️', '👳🏻‍♂', '👳🏼‍♂️', '👳🏼‍♂', '👳🏽‍♂️', '👳🏽‍♂', '👳🏾‍♂️', '👳🏾‍♂', '👳🏿‍♂️', '👳🏿‍♂', '👳‍♀️', '👳‍♀', '👳🏻‍♀️', '👳🏻‍♀', '👳🏼‍♀️', '👳🏼‍♀', '👳🏽‍♀️', '👳🏽‍♀', '👳🏾‍♀️', '👳🏾‍♀', '👳🏿‍♀️', '👳🏿‍♀', '👲', '👲🏻', '👲🏼', '👲🏽', '👲🏾', '👲🏿', '🧕', '🧕🏻', '🧕🏼', '🧕🏽', '🧕🏾', '🧕🏿', '🧔', '🧔🏻', '🧔🏼', '🧔🏽', '🧔🏾', '🧔🏿', '👱', '👱🏻', '👱🏼', '👱🏽', '👱🏾', '👱🏿', '👱‍♂️', '👱‍♂', '👱🏻‍♂️', '👱🏻‍♂', '👱🏼‍♂️', '👱🏼‍♂', '👱🏽‍♂️', '👱🏽‍♂', '👱🏾‍♂️', '👱🏾‍♂', '👱🏿‍♂️', '👱🏿‍♂', '👱‍♀️', '👱‍♀', '👱🏻‍♀️', '👱🏻‍♀', '👱🏼‍♀️', '👱🏼‍♀', '👱🏽‍♀️', '👱🏽‍♀', '👱🏾‍♀️', '👱🏾‍♀', '👱🏿‍♀️', '👱🏿‍♀', '👨‍', '👨🏻‍', '👨🏼‍', '👨🏽‍', '👨🏾‍', '👨🏿‍', '👩‍', '👩🏻‍', '👩🏼‍', '👩🏽‍', '👩🏾‍', '👩🏿‍', '👨‍', '👨🏻‍', '👨🏼‍', '👨🏽‍', '👨🏾‍', '👨🏿‍', '👩‍', '👩🏻‍', '👩🏼‍', '👩🏽‍', '👩🏾‍', '👩🏿‍', '👨‍', '👨🏻‍', '👨🏼‍', '👨🏽‍', '👨🏾‍', '👨', '👩‍', '👩🏻‍', '👩🏼‍', '👩🏽‍', '👩🏾‍', '👩', '👨', '👨🏻', '👨🏼', '👨🏽', '👨🏾', '👨🏿', '👩', '👩🏻', '👩🏼', '👩🏽', '👩🏾', '👩🏿‍', '🤵', '🤵🏻', '🤵🏼', '🤵🏽', '🤵🏾', '🤵🏿', '👰', '👰🏻', '👰🏼', '👰🏽', '👰🏾', '👰🏿', '🤰', '🤰🏻', '🤰🏼', '🤰🏽', '🤰🏾', '🤰🏿', '🤱', '🤱🏻', '🤱🏼', '🤱🏽', '🤱🏾', '🤱🏿', '👼', '👼🏻', '👼🏼', '👼🏽', '👼🏾', '👼🏿', '🎅', '🎅🏻', '🎅🏼', '🎅🏽', '🎅🏾', '🎅🏿', '🤶', '🤶🏻', '🤶🏼', '🤶🏽', '🤶🏾', '🤶🏿', '🧙', '🧙🏻', '🧙🏼', '🧙🏽', '🧙🏾', '🧙🏿', '🧙‍♀️', '🧙‍♀', '🧙🏻‍♀️', '🧙🏻‍♀', '🧙🏼‍♀️', '🧙🏼‍♀', '🧙🏽‍♀️', '🧙🏽‍♀', '🧙🏾‍♀️', '🧙🏾‍♀', '🧙🏿‍♀️', '🧙🏿‍♀', '🧙‍♂️', '🧙‍♂', '🧙🏻‍♂️', '🧙🏻‍♂', '🧙🏼‍♂️', '🧙🏼‍♂', '🧙🏽‍♂️', '🧙🏽‍♂', '🧙🏾‍♂️', '🧙🏾‍♂', '🧙🏿‍♂️', '🧙🏿‍♂', '🧚', '🧚🏻', '🧚🏼', '🧚🏽', '🧚🏾', '🧚🏿', '🧚‍♀️', '🧚‍♀', '🧚🏻‍♀️', '🧚🏻‍♀', '🧚🏼‍♀️', '🧚🏼‍♀', '🧚🏽‍♀️', '🧚🏽‍♀', '🧚🏾‍♀️', '🧚🏾‍♀', '🧚🏿‍♀️', '🧚🏿‍♀', '🧚‍♂️', '🧚‍♂', '🧚🏻‍♂️', '🧚🏻‍♂', '🧚🏼‍♂️', '🧚🏼‍♂', '🧚🏽‍♂️', '🧚🏽‍♂', '🧚🏾‍♂️', '🧚🏾‍♂', '🧚🏿‍♂️', '🧚🏿‍♂', '🧛', '🧛🏻', '🧛🏼', '🧛🏽', '🧛🏾', '🧛🏿', '🧛‍♀️', '🧛‍♀', '🧛🏻‍♀️', '🧛🏻‍♀', '🧛🏼‍♀️', '🧛🏼‍♀', '🧛🏽‍♀️', '🧛🏽‍♀', '🧛🏾‍♀️', '🧛🏾‍♀', '🧛🏿‍♀️', '🧛🏿‍♀', '🧛‍♂️', '🧛‍♂', '🧛🏻‍♂️', '🧛🏻‍♂', '🧛🏼‍♂️', '🧛🏼‍♂', '🧛🏽‍♂️', '🧛🏽‍♂', '🧛🏾‍♂️', '🧛🏾‍♂', '🧛🏿‍♂️', '🧛🏿‍♂', '🧜', '🧜🏻', '🧜🏼', '🧜🏽', '🧜🏾', '🧜🏿', '🧜‍♀️', '🧜‍♀', '🧜🏻‍♀️', '🧜🏻‍♀', '🧜🏼‍♀️', '🧜🏼‍♀', '🧜🏽‍♀️', '🧜🏽‍♀', '🧜🏾‍♀️', '🧜🏾‍♀', '🧜🏿‍♀️', '🧜🏿‍♀', '🧜‍♂️', '🧜‍♂', '🧜🏻‍♂️', '🧜🏻‍♂', '🧜🏼‍♂️', '🧜🏼‍♂', '🧜🏽‍♂️', '🧜🏽‍♂', '🧜🏾‍♂️', '🧜🏾‍♂', '🧜🏿‍♂️', '🧜🏿‍♂', '🧝', '🧝🏻', '🧝🏼', '🧝🏽', '🧝🏾', '🧝🏿', '🧝‍♀️', '🧝‍♀', '🧝🏻‍♀️', '🧝🏻‍♀', '🧝🏼‍♀️', '🧝🏼‍♀', '🧝🏽‍♀️', '🧝🏽‍♀', '🧝🏾‍♀️', '🧝🏾‍♀', '🧝🏿‍♀️', '🧝🏿‍♀', '🧝‍♂️', '🧝‍♂', '🧝🏻‍♂️', '🧝🏻‍♂', '🧝🏼‍♂️', '🧝🏼‍♂', '🧝🏽‍♂️', '🧝🏽‍♂', '🧝🏾‍♂️', '🧝🏾‍♂', '🧝🏿‍♂️', '🧝🏿‍♂', '🧞', '🧞‍♀️', '🧞‍♀', '🧞‍♂️', '🧞‍♂', '🧟', '🧟‍♀️', '🧟‍♀', '🧟‍♂️', '🧟‍♂', '🙎', '🙎🏻', '🙎🏼', '🙎🏽', '🙎🏾', '🙎🏿', '🙎‍♂️', '🙎‍♂', '🙎🏻‍♂️', '🙎🏻‍♂', '🙎🏼‍♂️', '🙎🏼‍♂', '🙎🏽‍♂️', '🙎🏽‍♂', '🙎🏾‍♂️', '🙎🏾‍♂', '🙎🏿‍♂️', '🙎🏿‍♂', '🙎‍♀️', '🙎‍♀', '🙎🏻‍♀️', '🙎🏻‍♀', '🙎🏼‍♀️', '🙎🏼‍♀', '🙎🏽‍♀️', '🙎🏽‍♀', '🙎🏾‍♀️', '🙎🏾‍♀', '🙎🏿‍♀️', '🙎🏿‍♀', '🚶', '🚶🏻', '🚶🏼', '🚶🏽', '🚶🏾', '🚶🏿', '🚶‍♂️', '🚶‍♂', '🚶🏻‍♂️', '🚶🏻‍♂', '🚶🏼‍♂️', '🚶🏼‍♂', '🚶🏽‍♂️', '🚶🏽‍♂', '🚶🏾‍♂️', '🚶🏾‍♂', '🚶🏿‍♂️', '🚶🏿‍♂', '🚶‍♀️', '🚶‍♀', '🚶🏻‍♀️', '🚶🏻‍♀', '🚶🏼‍♀️', '🚶🏼‍♀', '🚶🏽‍♀️', '🚶🏽‍♀', '🚶🏾‍♀️', '🚶🏾‍♀', '🚶🏿‍♀️', '🚶🏿‍♀', '🏃', '🏃🏻', '🏃🏼', '🏃🏽', '🏃🏾', '🏃🏿', '🏃‍♂️', '🏃‍♂', '🏃🏻‍♂️', '🏃🏻‍♂', '🏃🏼‍♂️', '🏃🏼‍♂', '🏃🏽‍♂️', '🏃🏽‍♂', '🏃🏾‍♂️', '🏃🏾‍♂', '🏃🏿‍♂️', '🏃🏿‍♂', '🏃‍♀️', '🏃‍♀', '🏃🏻‍♀️', '🏃🏻‍♀', '🏃🏼‍♀️', '🏃🏼‍♀', '🏃🏽‍♀️', '🏃🏽‍♀', '🏃🏾‍♀️', '🏃🏾‍♀', '🏃🏿‍♀️', '🏃🏿‍♀', '💃', '💃🏻', '💃🏼', '💃🏽', '💃🏾', '💃🏿', '🕺', '🕺🏻', '🕺🏼', '🕺🏽', '🕺🏾', '🕺🏿', '🧖', '🧖🏻', '🧖🏼', '🧖🏽', '🧖🏾', '🧖🏿', '🧖‍♀️', '🧖‍♀', '🧖🏻‍♀️', '🧖🏻‍♀', '🧖🏼‍♀️', '🧖🏼‍♀', '🧖🏽‍♀️', '🧖🏽‍♀', '🧖🏾‍♀️', '🧖🏾‍♀', '🧖🏿‍♀️', '🧖🏿‍♀', '🧖‍♂️', '🧖‍♂', '🧖🏻‍♂️', '🧖🏻‍♂', '🧖🏼‍♂️', '🧖🏼‍♂', '🧖🏽‍♂️', '🧖🏽‍♂', '🧖🏾‍♂️', '🧖🏾‍♂', '🧖🏿‍♂️', '🧖🏿‍♂', '🧘', '🧘🏻', '🧘🏼', '🧘🏽', '🧘🏾', '🧘🏿', '🧘‍♀️', '🧘‍♀', '🧘🏻‍♀️', '🧘🏻‍♀', '🧘🏼‍♀️', '🧘🏼‍♀', '🧘🏽‍♀️', '🧘🏽‍♀', '🧘🏾‍♀️', '🧘🏾‍♀', '🧘🏿‍♀️', '🧘🏿‍♀', '🧘‍♂️', '🧘‍♂', '🧘🏻‍♂️', '🧘🏻‍♂', '🧘🏼‍♂️', '🧘🏼‍♂', '🧘🏽‍♂️', '🧘🏽‍♂', '🧘🏾‍♂️', '🧘🏾‍♂', '🧘🏿‍♂️', '🧘🏿‍♂', '🕴️', '🕴', '🕴🏻', '🕴🏼', '🕴🏽', '🕴🏾', '🕴🏿', '👪', '👨‍👩‍👦', '👨‍👩‍👧', '👨‍👩‍👧‍👦', '👨‍👩‍👦‍👦', '👨‍👩‍👧‍👧', '👨‍👨‍👦', '👨‍👨‍👧', '👨‍👨‍👧‍👦', '👨‍👨‍👦‍👦', '👨‍👨‍👧‍👧', '👩‍👩‍👦', '👩‍👩‍👧', '👩‍👩‍👧‍👦', '👩‍👩‍👦‍👦', '👩‍👩‍👧‍👧', '👨‍👦', '👨‍👦‍👦', '👨‍👧', '👨‍👧‍👦', '👨‍👧‍👧', '👩‍👦', '👩‍👦‍👦', '👩‍👧', '👩‍👧‍👦', '👩‍👧‍👧', '🐵', '🐒', '🦍', '🐶', '🐕', '🐩', '🐺', '🦊', '🐱', '🐈', '🦁', '🐯', '🐅', '🐆', '🐴', '🐎', '🦄', '🦓', '🦌', '🐮', '🐂', '🐃', '🐄', '🐷', '🐖', '🐗', '🐽', '🐏', '🐑', '🐐', '🐪', '🐫', '🦒', '🐘', '🦏', '🐭', '🐁', '🐀', '🐹', '🐰', '🐇', '🐿️', '🐿', '🦔', '🦇', '🐻', '🐨', '🐼', '🐾', '🦃', '🐔', '🐓', '🐣', '🐤', '🐥', '🐦', '🐧', '🕊️', '🕊', '🦅', '🦆', '🦉', '🐸', '🐊', '🐢', '🦎', '🐍', '🐲', '🐉', '🦕', '🦖', '🐳', '🐋', '🐬', '🐟', '🐠', '🐡', '🦈', '🐙', '🐚', '🦀', '🦐', '🦑', '🐌', '🦋', '🐛', '🐜', '🐝', '🐞', '🦗', '🕷️', '🕷', '🦂', '🌍', '🌎', '🌏', '🏛️', '🏠', '🏢', '🏨', '🏫', '🏰', '⛪', '🕌', '🕍', '⛩️', '🕋', '⛺', '🚃', '🚄', '🚅', '🚆', '🚇', '🚈', '🚉', '🚊', '🚝', '🚞', '🚋', '🚌', '🚐', '🚎', '🚢', '🛥️', '🛳️', '✈️', '🛩️', '🚁', '🚟', '🚠', '🚡', '🚀', '🛸', '☃️', '⛄', '☃'\n]\n\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) {\n\tif(!(instance instanceof Constructor)) {\n\t\tthrow new TypeError(\"Cannot call a class as a function\");\n\t}\n}\n\nvar Boid = (function() {\n\tfunction Boid(x, y) {\n\t\t_classCallCheck(this, Boid);\n\n\t\tthis.boid = random(emojis);\n\t\tthis.pos = createVector(x, y);\n\t\tthis.ppos = createVector(this.pos.x, this.pos.y);\n\t\tthis.rvel = 1.5;\n\t\tthis.vel = createVector(\n\t\t\trandom(-this.rvel, this.rvel),\n\t\t\trandom(-this.rvel, this.rvel)\n\t\t);\n\t\tthis.r = random(15, 45);\n\t\tthis.directionx = 1;\n\t\tthis.directiony = 1;\n\t\tthis.maxSpeed = 50;\n\t\tthis.trail = [];\n\t}\n\n\tBoid.prototype.show = function show(balls) {\n\t\tthis.proximity(balls);\n\t\ttextSize(this.r);\n\t\ttext(this.boid, this.pos.x, this.pos.y);\n\t};\n\n\tBoid.prototype.update = function update() {\n\t\tthis.pos.x += this.vel.x * this.directionx;\n\t\tthis.pos.y += this.vel.y * this.directiony;\n\t};\n\n\tBoid.prototype.edges = function edges() {\n\t\tif(this.pos.x > width - this.r / 2 || this.pos.x < this.r / 2) {\n\t\t\tthis.directionx *= -1;\n\t\t}\n\t\tif(this.pos.y > height - this.r / 2 || this.pos.y < this.r / 2) {\n\t\t\tthis.directiony *= -1;\n\t\t}\n\t};\n\n\tBoid.prototype.proximity = function proximity(balls) {\n\t\tfor(\n\t\t\tvar _iterator = balls,\n\t\t\t\t_isArray = Array.isArray(_iterator),\n\t\t\t\t_i = 0,\n\t\t\t\t_iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;\n\n\t\t) {\n\t\t\tvar _ref;\n\n\t\t\tif(_isArray) {\n\t\t\t\tif(_i >= _iterator.length) break;\n\t\t\t\t_ref = _iterator[_i++];\n\t\t\t} else {\n\t\t\t\t_i = _iterator.next();\n\t\t\t\tif(_i.done) break;\n\t\t\t\t_ref = _i.value;\n\t\t\t}\n\n\t\t\tvar ball = _ref;\n\n\t\t\tif(ball != this) {\n\t\t\t\tif(ball.pos.dist(this.pos) < 50) {\n\t\t\t\t\tstrokeWeight(2);\n\t\t\t\t\tstroke(255);\n\t\t\t\t\tline(ball.pos.x, ball.pos.y, this.pos.x, this.pos.y);\n\t\t\t\t\tif(this.r < 60) this.r += 0.1;\n\t\t\t\t\tvar dir = p5.Vector.sub(this.pos, ball.pos);\n\t\t\t\t\tdir.normalize();\n\t\t\t\t\tif(\n\t\t\t\t\t\tthis.pos.y < height - this.r / 2 &&\n\t\t\t\t\t\tthis.pos.y > this.r / 2 &&\n\t\t\t\t\t\tthis.pos.x < width - this.r / 2 &&\n\t\t\t\t\t\tthis.pos.x > this.r / 2\n\t\t\t\t\t)\n\t\t\t\t\t\tthis.pos.add(dir);\n\t\t\t\t\tthis.ppos = this.pos;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn Boid;\n})();"
    },
    {
      "sketchName": "this is a really long name",
      "sketchCode": "/*\tthis is a really long name // cc teddavis.org 2019\t*/\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tbackground(0);\n}\n\nfunction draw() {\n\tfill(255);\n\ttextSize(200);\n\ttext(\"yup... \\nthat's a really long name\", 0, 0, width, height);\n}"
    }
  ],
  "settings": {
    "welcome": false,
    "fontSize": 12.5,
    "autoCompile": false,
    "ecoRender": true,
    "canvasCursor": true,
    "fullscreenMode": false,
    "fileName": "this is a really long name",
    "menuMode": true,
    "menutab": true,
    "debugMode": false,
    "sketches": [
      "aboutsketch",
      "bwEllipse",
      "easeFunction",
      "sinStrings",
      "wanderingWorm",
      "audioAnalysis",
      "webgl_sphereBox",
      "textToPoints",
      "basel.codes",
      "this is a really long name"
    ],
    "sketchesSortable": "",
    "scripts": [
      "includes/p5/addons/p5.dom.min.js",
      "includes/p5/p5.min.js",
      "includes/p5/addons/p5.sound.min.js"
    ],
    "theme": "ace/theme/twilight",
    "themeBG": "052544"
  }
}
